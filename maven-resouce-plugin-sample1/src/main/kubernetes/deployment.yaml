apiVersion: apps/v1
kind: Deployment
metadata:
    name: ${project.artifactId}
spec:
    replicas: ${environmentScale}
    strategy:
        rollingUpdate:
            maxSurge: ${environmentScale}
            maxUnavailable: 1
        type: RollingUpdate
    selector:
        matchLabels:
            app: ${project.artifactId}
    template:
        metadata:
            labels:
                app: ${project.artifactId}
        spec:
            imagePullSecrets:
            - name: ${environmentDockerRegistry}
            containers:
            - name: ${project.artifactId}
              image: ${environmentDockerRegistry}/${organisation.domain}/${organisation.group}/${project.artifactId}:${project.version}
              ports:
              - containerPort: ${tile-deploy.port}
              resources:
                  limits:
                      cpu: ${quota-limits.mediumCpu}
                      memory: ${quota-limits.mediumMemory}
                  requests:
                      cpu: ${quota-requests.mediumCpu}
                      memory: ${quota-requests.mediumMemory}
              volumeMounts:
              - mountPath: /etc/${project.artifactId}/
                name: config
                readOnly: true
              - mountPath: /secrets/${project.artifactId}/
                name: secrets
                readOnly: true
            volumes:
            - name: config
              configMap:
                  name: ${project.artifactId}-config-v${parsedVersion.majorVersion}
            - name: secrets
              secret:
                  secretName: ${project.artifactId}